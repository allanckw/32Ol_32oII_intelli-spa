116
cat: All Category
1 - Parent, ImplStmtLine, Typed :: 
stmt s, s1; prog_line n;
Select s such that Parent(s, s1) with s1.stmt#=3

5000 
2 - Parent, ImplStmtLine, Typed :: 
stmt s, s1; prog_line n;
Select s such that Parent(s, s1) with s1.stmt#=11
9
5000
3 - Parent, ImplStmtLine, Typed :: 
stmt s, s1; prog_line n;
Select s such that Parent(s, s1) with s1.stmt#=13
11
5000
4 - Parent, ImplStmtLine, Typed :: 
stmt s, s1; prog_line n;
Select s such that Parent(s, s1) with s1.stmt#=21
19
5000
5 - Parent, ImplStmtLine, Typed :: 
stmt s;
Select s such that Parent(s, 3)

5000
6 - Parent, ImplStmtLine, Typed :: 
stmt s; 
Select s such that Parent(s, 13)
11
5000
7 - Parent, ImplStmtLine, Typed :: 
stmt s; 
Select s such that Parent(s, 15)
11
5000
8 - Parent, ImplStmtLine, Typed :: 
stmt s; 
Select s such that Parent(s, 22)
19
5000
9 - Parent, ImplStmtLine, Typed :: 
stmt s; 
Select s such that Parent(2, s)

5000
10 - Parent, ImplStmtLine, Typed :: 
stmt s; 
Select s such that Parent(9, s)
10, 11, 17
5000
11 - Parent, ImplStmtLine, Typed :: 
stmt s; 
Select s such that Parent(10, s)

5000
12 - Parent, ImplStmtLine, Typed :: 
stmt s; 
Select s such that Parent(11, s)
12, 13, 14, 15, 16
5000
13 - Parent, ImplStmtLine, Typed :: 
stmt s; 
Select s such that Parent*(s, 2)

5000
14 - Parent, ImplStmtLine, Typed :: 
stmt s; 
Select s such that Parent*(s, 10)
9
5000
15 - Parent, ImplStmtLine, Typed :: 
stmt s; 
Select s such that Parent*(s, 15)
9, 11
5000
16 - Parent, ImplStmtLine, Typed :: 
stmt s; 
Select s such that Parent(s, 21)
19
5000
17 - Parent, ImplStmtLine, Typed :: 
while w; 
Select w such that Parent*(w, 2)

5000
18 - Parent, ImplStmtLine, Typed :: 
while w; 
Select w such that Parent*(w, 10)
9
5000
19 - Parent, ImplStmtLine, Typed :: 
while w; 
Select w such that Parent*(w, 13)
9
5000
20 - Parent, ImplStmtLine, Typed :: 
while w; 
Select w such that Parent*(w, 17)
9
5000
21 - Parent, ImplStmtLine, Typed :: 
while w; 
Select w such that Parent*(w, 22)
19
5000
22 - Parent, ImplStmtLine, Typed :: 
while w; stmt s;
Select s such that Parent*(w, 10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
5000
23 - Parent, ImplStmtLine, Typed :: 
while w; stmt s;
Select s such that Parent*(w, 3)

5000
24 - Parent, ImplStmtLine, Typed :: 
stmt s;
Select s such that Follows(s, 1)

5000
25 - Parent, ImplStmtLine, Typed :: 
stmt s;
Select s such that Follows(s, 3)
2
5000
26 - Parent, ImplStmtLine, Typed :: 
stmt s;
Select s such that Follows(s, 9)
8
5000
27 - Parent, ImplStmtLine, Typed :: 
stmt s;
Select s such that Follows(s, 10)

5000
28 - Parent, ImplStmtLine, Typed :: 
stmt s;
Select s such that Follows(s, 19)

5000
29 - Parent, ImplStmtLine, Typed :: 
assign a;
Select a such that Follows(a, 1)

5000
30 - Parent, ImplStmtLine, Typed :: 
assign a;
Select a such that Follows(a, 3)
2
5000 
31 - Parent, ImplStmtLine, Typed :: 
assign a;
Select a such that Follows(a, 9)
8
5000 
32 - Parent, ImplStmtLine, Typed :: 
assign a;
Select a such that Follows(a, 10)

5000
33 - Parent, ImplStmtLine, Typed :: 
assign a;
Select a such that Follows(a, 18)

5000
34 - Parent, ImplStmtLine, Typed :: 
while w; stmt s;
Select w such that Follows*(s, w)
9
5000
35 - Parent, ImplStmtLine, Typed :: 
stmt s;
Select s such that Follows*(s, 2)
1
5000
36 - Parent, ImplStmtLine, Typed :: 
stmt s;
Select s such that Follows*(s, 10)

5000
37 - Parent, ImplStmtLine, Typed :: 
stmt s;
Select s such that Follows*(s, 11)
10
5000
38 - Parent, ImplStmtLine, Typed :: 
stmt s;
Select s such that Follows*(s, 21)
20
5000
39 - Parent, ImplStmtLine, Typed :: 
if ifstat;
Select ifstat such that Follows*(ifstat, 10)

5000
40 - Parent, ImplStmtLine, Typed :: 
if ifstat;
Select ifstat such that Follows*(ifstat, 17)
11
5000
41 - Parent, ImplStmtLine, Typed :: 
assign a;
Select a such that Follows*(a, 4)
1, 2, 3
5000
42 - Parent, ImplStmtLine, Typed :: 
assign a;
Select a such that Follows*(a, 5)
1, 2, 3, 4
5000
43 - Parent, ImplStmtLine, Typed :: 
assign a;
Select a such that Follows*(a, 9)
1, 2, 3, 4, 6, 8
5000
44 - Parent, ImplStmtLine, Typed :: 
assign a;
Select a such that Follows*(a, 17)
10
5000
45 - Parent, ImplStmtLine, Typed :: 
assign a;
Select a such that Follows*(a, 22)
20
5000
46 - Parent, ImplStmtLine, Typed :: 
variable v;
Select v such that Modifies(3, v)
y
5000
47 - Parent, ImplStmtLine, Typed :: 
variable v;
Select v such that Modifies(5, v)
z, y
5000
48 - Parent, ImplStmtLine, Typed :: 
variable v;
Select v such that Modifies(9, v)
e, i, y, x, z
5000
49 - Parent, ImplStmtLine, Typed :: 
variable v;
Select v such that Modifies(11, v)
i, y, x, z
5000
50 - Parent, ImplStmtLine, Typed :: 
while w;
Select w such that Modifies(w, "i")
9, 19
5000
51 - Parent, ImplStmtLine, Typed :: 
while w;
Select w such that Modifies(w, "y")
9, 19, 27
5000
52 - Parent, ImplStmtLine, Typed :: 
variable v;
Select v such that Modifies("Mary", v)
z, i, y
5000
53 - Parent, ImplStmtLine, Typed :: 
stmt s;
Select s such that Uses(s, "i")
5, 9, 16, 19, 22, 23, 28, 11, 18, 21, 27
5000
54 - Parent, ImplStmtLine, Typed :: 
stmt s;
Select s such that Uses(s, "y")
4, 10, 12, 13, 14, 17, 20, 23, 30, 5, 9, 11, 18, 19, 21, 27, 28
5000
55 - Parent, ImplStmtLine, Typed :: 
variable v;
Select v such that Uses(10, v)
x, y
5000
56 - Parent, ImplStmtLine, Typed :: 
variable v;
Select v such that Uses(18, v)
i, z, y, e, d, x
5000
57 - Parent, ImplStmtLine, Typed :: 
variable v; assign a;
Select v such that Uses(a, v)
i, z, y, e, d, x
5000
58 - Parent, ImplStmtLine, Typed :: 
assign a;
Select a such that Modifies(a, "i") and Uses(a, "i")
16, 22
5000
59 - Parent, ImplStmtLine, Typed :: 
assign a;
Select a such that Modifies(a, "z") and Uses(a, "z")
25, 30
5000
60 - Parent, ImplStmtLine, Typed :: 
assign a; while w;
Select a such that Modifies(a, "z") and Parent(w, a)
20, 25
5000
61 - Parent, ImplStmtLine, Typed :: 
assign a; while w;
Select a such that Parent(w, a) and Modifies(a, "z")
20, 25
5000 
62 - Parent, ImplStmtLine, Typed :: 
assign a; while w;
Select a such that Modifies(a, "z") such that Parent(w, a)
20, 25
5000
63 - Parent, ImplStmtLine, Typed :: 
procedure p;
Select p such that Calls*(p, "Allan")
Natalie, Mary
5000
64 - Parent, ImplStmtLine, Typed :: 
procedure p;
Select p such that Calls("Natalie", p) and Modifies(p, "i") and Uses(p, "x")
Mary
5000
65 - Parent, ImplStmtLine, Typed :: 
procedure p;
Select p such that Calls("Natalie", p) and Modifies(p, "i")
Mary
5000
66 - Parent, ImplStmtLine, Typed :: 
assign a; 
Select a pattern a ("y", _)
3, 12, 23, 29
5000
67 - Parent, ImplStmtLine, Typed :: 
assign a; 
Select a pattern a ("z", "2*x")

5000
68 - Parent, ImplStmtLine, Typed :: 
assign a; while w;
Select a pattern a ("x", _) such that Follows(w, a)
26
5000
69 - Parent, ImplStmtLine, Typed :: 
assign a; 
Select a pattern a (_, "y+1")
13
5000
70 - Parent, ImplStmtLine, Typed :: 
assign a; 
Select a pattern a (_, "x-y")
10
5000
71 - Parent, ImplStmtLine, Typed :: 
assign a; 
Select a pattern a (_, _"y*3+2"_)

5000
72 - Parent, ImplStmtLine, Typed :: 
assign a; 
Select a pattern a (_, _"y+e*d"_)

5000
73 - Parent, ImplStmtLine, Typed :: 
assign a; 
Select a pattern a (_, _"y+z"_)
12, 14, 17, 23
5000
74 - Parent, ImplStmtLine, Typed :: 
assign a; 
Select a pattern a (_, _"z+i"_)

5000
75 - Parent, ImplStmtLine, Typed :: 
assign a; 
Select a pattern a (_, _"2*x"_)
20
5000
76 - Parent, ImplStmtLine, Typed :: 
assign a; 
Select a pattern a (_, _"3+2"_)

5000
77 - Parent, ImplStmtLine, Typed :: 
stmt s; constant c; 
Select s with s.stmt#=c.value
1, 2, 3, 4, 5, 10, 12
5000
78 - Parent, ImplStmtLine, Typed :: 
if ifstat; constant c; 
Select BOOLEAN pattern ifstat ("i", _, _) with c.value=10
TRUE
5000
79 - Parent, ImplStmtLine, Typed :: 
prog_line n2; 
Select n2 such that Next(1, n2)
2
5000
80 - Parent, ImplStmtLine, Typed :: 
prog_line n2; 
Select n2 such that Next(9, n2)
10, 18
5000
81 - Parent, ImplStmtLine, Typed :: 
prog_line n2; 
Select n2 such that Next(11, n2)
12, 14
5000
82 - Parent, ImplStmtLine, Typed :: 
prog_line n2; 
Select n2 such that Next(13, n2)
17
5000
83 - Parent, ImplStmtLine, Typed :: 
prog_line n2; 
Select n2 such that Next(15, n2)
16
5000
84 - Parent, ImplStmtLine, Typed :: 
prog_line n2; 
Select n2 such that Next(17, n2)
9
5000
85 - Parent, ImplStmtLine, Typed :: 
prog_line n2; 
Select n2 such that Next(18, n2)

5000
86 - Parent, ImplStmtLine, Typed :: 
prog_line n1; 
Select n1 such that Next(n1, 1)

5000
87 - Parent, ImplStmtLine, Typed :: 
prog_line n1; 
Select n1 such that Next(n1, 9)
8, 17
5000
88 - Parent, ImplStmtLine, Typed :: 
prog_line n1; 
Select n1 such that Next(n1, 10)
9
5000
89 - Parent, ImplStmtLine, Typed :: 
prog_line n1; 
Select n1 such that Next(n1, 17)
13, 16
5000
90 - Parent, ImplStmtLine, Typed :: 
prog_line n1; 
Select n1 such that Next(n1, 18)
9
5000 
91 - Parent, ImplStmtLine, Typed :: 
prog_line n1; 
Select n1 such that Next(n1, 19)

5000 
92 - Parent, ImplStmtLine, Typed :: 
prog_line n; 
Select n such that Next*(10, n) and Next*(n, 9)
9, 10, 11, 12, 13, 14, 15, 16, 17
5000
93 - Parent, ImplStmtLine, Typed :: 
prog_line n; 
Select n such that Next*(n, n)
9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30
5000
94 - Parent, ImplStmtLine, Typed :: 
assign a;
Select BOOLEAN such that Affects(1, 2)
TRUE
5000
95 - Parent, ImplStmtLine, Typed :: 
assign a;
Select BOOLEAN such that Affects(1, 3)
TRUE
5000
96 - Parent, ImplStmtLine, Typed :: 
assign a;
Select BOOLEAN such that Affects(1, 5)
FALSE
5000
97 - Parent, ImplStmtLine, Typed :: 
assign a;
Select BOOLEAN such that Affects(2, 6)
TRUE
5000
98 - Parent, ImplStmtLine, Typed :: 
assign a;
Select BOOLEAN such that Affects(2, 8)
FALSE
5000
99 - Parent, ImplStmtLine, Typed :: 
assign a;
Select BOOLEAN such that Affects(3, 12)
FALSE
5000
100 - Parent, ImplStmtLine, Typed :: 
assign a;
Select BOOLEAN such that Affects(3, 13)
FALSE
5000
101 - Parent, ImplStmtLine, Typed :: 
assign a;
Select BOOLEAN such that Affects(3, 13)
FALSE
5000 
102 - Parent, ImplStmtLine, Typed :: 
assign a1;
Select a1 such that Affects(a1, 1)

5000
103 - Parent, ImplStmtLine, Typed :: 
assign a1;
Select a1 such that Affects(a1, 10)
12, 17
5000
104 - Parent, ImplStmtLine, Typed :: 
assign a2;
Select a2 such that Affects(1, a2)
2, 3
5000
105 - Parent, ImplStmtLine, Typed :: 
assign a2;
Select a2 such that Affects(13, a2)
16
5000
106 - Parent, ImplStmtLine, Typed :: 
assign a;
Select BOOLEAN such that Affects*(1, 2)
TRUE
5000
107 - Parent, ImplStmtLine, Typed :: 
assign a;
Select BOOLEAN such that Affects*(1, 3)
TRUE
5000
108 - Parent, ImplStmtLine, Typed :: 
assign a;
Select BOOLEAN such that Affects*(1, 6)
TRUE
5000
109 - Parent, ImplStmtLine, Typed :: 
assign a;
Select BOOLEAN such that Affects*(1, 8)
TRUE
5000
110 - Parent, ImplStmtLine, Typed :: 
assign a;
Select BOOLEAN such that Affects*(11, 14)
FALSE
5000
111 - Parent, ImplStmtLine, Typed :: 
assign a;
Select BOOLEAN such that Affects*(20, 20)
FALSE
5000
112 - Parent, ImplStmtLine, Typed :: 
assign a1;
Select a1 such that Affects*(a1, 12)

5000
113 - Parent, ImplStmtLine, Typed :: 
assign a1;
Select a1 such that Affects*(a1, 16)
12, 13, 16
5000
114 - Parent, ImplStmtLine, Typed :: 
assign a1;
Select a1 such that Affects*(a1, 26)
25
5000
115 - Parent, ImplStmtLine, Typed :: 
assign a2;
Select a2 such that Affects*(6, a2)
8
5000
116 - Parent, ImplStmtLine, Typed :: 
assign a2;
Select a2 such that Affects*(20, a2)

5000